using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows.Forms;
using Microsoft.EntityFrameworkCore;
using ServiceAccounting.Model;

namespace ServiceAccounting.View
{
    public partial class NewPurchaseForm : Form
    {
        private List<Product> _products = new();

        public NewPurchaseForm()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            ServiceAccounting.ApplicationContext dbContext = new ServiceAccounting.ApplicationContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.Products.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = dbContext.Products.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            ServiceAccounting.ApplicationContext dbContext1 = new ServiceAccounting.ApplicationContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext1.Customers.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridLookUpEdit1.Properties.DataSource = dbContext1.Customers.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());

            gridControl2.DataSource = _products;
        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            var selectedRow = gridView1.GetFocusedRow() as Product;

            _products.Add(selectedRow);
            gridControl2.BeginUpdate();
            gridControl2.EndUpdate();
        }

        private void simpleButton4_Click(object sender, EventArgs e)
        {
            var selectedRow = gridView2.GetFocusedRow() as Product;

            _products.Remove(selectedRow);
            gridControl2.BeginUpdate();
            gridControl2.EndUpdate();
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void simpleButton1_Click(object sender, EventArgs e)
        {
            //var selectedProduct = gridView2.GetFocusedRow() as Product;
            var selectedCustomerRow = gridLookUpEdit1View.GetFocusedRow() as Customer;

            var selectedProducts = new List<Product>();
            int rowIndex = 0;

            while (gridView2.IsValidRowHandle(rowIndex))
            {
                selectedProducts.Add(gridView2.GetRow(rowIndex) as Product);
                rowIndex++;
            }

            using ApplicationContext db = new();
            var selectedCustomer = db.Customers.First(p => p.Id == selectedCustomerRow.Id);

            if (selectedCustomer == selectedCustomerRow)
            {
                int yyy = 0;
            }

            foreach (var product in selectedProducts)
            {
                var purchase = new Purchase
                {
                    Date = dateEdit1.DateTime,
                    Product = product,
                };

                selectedCustomer.Purchases.Add(purchase);
            }

            db.SaveChanges();

            foreach (var customer in db.Customers)
            {
                foreach (var purchase in customer.Purchases)
                {
                    int y = purchase.ProductId;
                }
            }

            Close();
        }
    }
}
