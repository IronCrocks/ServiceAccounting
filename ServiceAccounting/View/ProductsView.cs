using System;
using System.Windows.Forms;
using Microsoft.EntityFrameworkCore;
using ServiceAccounting.View.Base;

namespace ServiceAccounting.View
{
    public partial class ProductsView : UserControl, IProductsView
    {
        ApplicationContext _dbContext;
        public ProductsView()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            _dbContext = new ApplicationContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            _dbContext.Products.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                gridControl1.DataSource = _dbContext.Products.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        public event EventHandler RowUpdated;
        public event EventHandler RowDeleted;
        public event EventHandler ViewLoaded;

        protected virtual void OnRowUpdated(object sender, EventArgs e)
        {
            RowUpdated?.Invoke(sender, e);
        }

        protected virtual void OnRowDeleted(object sender, EventArgs e)
        {
            RowDeleted?.Invoke(sender, e);
        }

        protected virtual void OnViewLoaded(object sender, EventArgs e)
        {
            ViewLoaded?.Invoke(sender, e);
        }

        private void gridView1_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {
            OnRowUpdated(this, EventArgs.Empty);
        }

        private void gridView1_RowDeleted(object sender, DevExpress.Data.RowDeletedEventArgs e)
        {
            OnRowDeleted(this, EventArgs.Empty);
        }
    }
}
